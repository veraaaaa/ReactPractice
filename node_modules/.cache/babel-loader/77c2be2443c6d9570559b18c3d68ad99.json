{"ast":null,"code":"/* tslint:disable:no-bitwise */\nimport { SWIPE, DIRECTION_NONE, DIRECTION_LEFT, DIRECTION_RIGHT, DIRECTION_UP, DIRECTION_DOWN } from './config';\nfunction _calcTriangleDistance(x, y) {\n  return Math.sqrt(x * x + y * y);\n}\nfunction _calcAngle(x, y) {\n  var radian = Math.atan2(y, x);\n  return 180 / (Math.PI / radian);\n}\nexport function now() {\n  return Date.now();\n}\nexport function calcMutliFingerStatus(touches) {\n  if (touches.length < 2) {\n    return;\n  }\n  var _touches$ = touches[0],\n    x1 = _touches$.x,\n    y1 = _touches$.y;\n  var _touches$2 = touches[1],\n    x2 = _touches$2.x,\n    y2 = _touches$2.y;\n  var deltaX = x2 - x1;\n  var deltaY = y2 - y1;\n  return {\n    x: deltaX,\n    y: deltaY,\n    z: _calcTriangleDistance(deltaX, deltaY),\n    angle: _calcAngle(deltaX, deltaY)\n  };\n}\nexport function calcMoveStatus(startTouches, touches, time) {\n  var _startTouches$ = startTouches[0],\n    x1 = _startTouches$.x,\n    y1 = _startTouches$.y;\n  var _touches$3 = touches[0],\n    x2 = _touches$3.x,\n    y2 = _touches$3.y;\n  var deltaX = x2 - x1;\n  var deltaY = y2 - y1;\n  var deltaZ = _calcTriangleDistance(deltaX, deltaY);\n  return {\n    x: deltaX,\n    y: deltaY,\n    z: deltaZ,\n    time: time,\n    velocity: deltaZ / time,\n    angle: _calcAngle(deltaX, deltaY)\n  };\n}\nexport function calcRotation(startMutliFingerStatus, mutliFingerStatus) {\n  var startAngle = startMutliFingerStatus.angle;\n  var angle = mutliFingerStatus.angle;\n  return angle - startAngle;\n}\nexport function getEventName(prefix, status) {\n  return prefix + status[0].toUpperCase() + status.slice(1);\n}\nexport function shouldTriggerSwipe(delta, velocity) {\n  return Math.abs(delta) >= SWIPE.threshold && Math.abs(velocity) > SWIPE.velocity;\n}\nexport function shouldTriggerDirection(direction, directionSetting) {\n  if (directionSetting & direction) {\n    return true;\n  }\n  return false;\n}\n/**\n * @private\n * get the direction between two points\n * Note: will change next version\n * @param {Number} x\n * @param {Number} y\n * @return {Number} direction\n */\nexport function getDirection(x, y) {\n  if (x === y) {\n    return DIRECTION_NONE;\n  }\n  if (Math.abs(x) >= Math.abs(y)) {\n    return x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n  }\n  return y < 0 ? DIRECTION_UP : DIRECTION_DOWN;\n}\n/**\n * @private\n * get the direction between tow points when touch moving\n * Note: will change next version\n * @param {Object} point1 coordinate point, include x & y attributes\n * @param {Object} point2 coordinate point, include x & y attributes\n * @return {Number} direction\n */\nexport function getMovingDirection(point1, point2) {\n  var x1 = point1.x,\n    y1 = point1.y;\n  var x2 = point2.x,\n    y2 = point2.y;\n  var deltaX = x2 - x1;\n  var deltaY = y2 - y1;\n  if (deltaX === 0 && deltaY === 0) {\n    return DIRECTION_NONE;\n  }\n  if (Math.abs(deltaX) >= Math.abs(deltaY)) {\n    return deltaX < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n  }\n  return deltaY < 0 ? DIRECTION_UP : DIRECTION_DOWN;\n}\nexport function getDirectionEventName(direction) {\n  var name = void 0;\n  switch (direction) {\n    case DIRECTION_NONE:\n      break;\n    case DIRECTION_LEFT:\n      name = 'left';\n      break;\n    case DIRECTION_RIGHT:\n      name = 'right';\n      break;\n    case DIRECTION_UP:\n      name = 'up';\n      break;\n    case DIRECTION_DOWN:\n      name = 'down';\n      break;\n    default:\n  }\n  return name;\n}","map":{"version":3,"names":["SWIPE","DIRECTION_NONE","DIRECTION_LEFT","DIRECTION_RIGHT","DIRECTION_UP","DIRECTION_DOWN","_calcTriangleDistance","x","y","Math","sqrt","_calcAngle","radian","atan2","PI","now","Date","calcMutliFingerStatus","touches","length","_touches$","x1","y1","_touches$2","x2","y2","deltaX","deltaY","z","angle","calcMoveStatus","startTouches","time","_startTouches$","_touches$3","deltaZ","velocity","calcRotation","startMutliFingerStatus","mutliFingerStatus","startAngle","getEventName","prefix","status","toUpperCase","slice","shouldTriggerSwipe","delta","abs","threshold","shouldTriggerDirection","direction","directionSetting","getDirection","getMovingDirection","point1","point2","getDirectionEventName","name"],"sources":["/Users/vera/Downloads/千锋前端React项目教程（企业级实战开发）-源码笔记/11、跨组件状态控制/demoapp/node_modules/rc-gesture/es/util.js"],"sourcesContent":["/* tslint:disable:no-bitwise */\nimport { SWIPE, DIRECTION_NONE, DIRECTION_LEFT, DIRECTION_RIGHT, DIRECTION_UP, DIRECTION_DOWN } from './config';\nfunction _calcTriangleDistance(x, y) {\n    return Math.sqrt(x * x + y * y);\n}\nfunction _calcAngle(x, y) {\n    var radian = Math.atan2(y, x);\n    return 180 / (Math.PI / radian);\n}\nexport function now() {\n    return Date.now();\n}\nexport function calcMutliFingerStatus(touches) {\n    if (touches.length < 2) {\n        return;\n    }\n    var _touches$ = touches[0],\n        x1 = _touches$.x,\n        y1 = _touches$.y;\n    var _touches$2 = touches[1],\n        x2 = _touches$2.x,\n        y2 = _touches$2.y;\n\n    var deltaX = x2 - x1;\n    var deltaY = y2 - y1;\n    return {\n        x: deltaX,\n        y: deltaY,\n        z: _calcTriangleDistance(deltaX, deltaY),\n        angle: _calcAngle(deltaX, deltaY)\n    };\n}\nexport function calcMoveStatus(startTouches, touches, time) {\n    var _startTouches$ = startTouches[0],\n        x1 = _startTouches$.x,\n        y1 = _startTouches$.y;\n    var _touches$3 = touches[0],\n        x2 = _touches$3.x,\n        y2 = _touches$3.y;\n\n    var deltaX = x2 - x1;\n    var deltaY = y2 - y1;\n    var deltaZ = _calcTriangleDistance(deltaX, deltaY);\n    return {\n        x: deltaX,\n        y: deltaY,\n        z: deltaZ,\n        time: time,\n        velocity: deltaZ / time,\n        angle: _calcAngle(deltaX, deltaY)\n    };\n}\nexport function calcRotation(startMutliFingerStatus, mutliFingerStatus) {\n    var startAngle = startMutliFingerStatus.angle;\n    var angle = mutliFingerStatus.angle;\n\n    return angle - startAngle;\n}\nexport function getEventName(prefix, status) {\n    return prefix + status[0].toUpperCase() + status.slice(1);\n}\nexport function shouldTriggerSwipe(delta, velocity) {\n    return Math.abs(delta) >= SWIPE.threshold && Math.abs(velocity) > SWIPE.velocity;\n}\nexport function shouldTriggerDirection(direction, directionSetting) {\n    if (directionSetting & direction) {\n        return true;\n    }\n    return false;\n}\n/**\n * @private\n * get the direction between two points\n * Note: will change next version\n * @param {Number} x\n * @param {Number} y\n * @return {Number} direction\n */\nexport function getDirection(x, y) {\n    if (x === y) {\n        return DIRECTION_NONE;\n    }\n    if (Math.abs(x) >= Math.abs(y)) {\n        return x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n    }\n    return y < 0 ? DIRECTION_UP : DIRECTION_DOWN;\n}\n/**\n * @private\n * get the direction between tow points when touch moving\n * Note: will change next version\n * @param {Object} point1 coordinate point, include x & y attributes\n * @param {Object} point2 coordinate point, include x & y attributes\n * @return {Number} direction\n */\nexport function getMovingDirection(point1, point2) {\n    var x1 = point1.x,\n        y1 = point1.y;\n    var x2 = point2.x,\n        y2 = point2.y;\n\n    var deltaX = x2 - x1;\n    var deltaY = y2 - y1;\n    if (deltaX === 0 && deltaY === 0) {\n        return DIRECTION_NONE;\n    }\n    if (Math.abs(deltaX) >= Math.abs(deltaY)) {\n        return deltaX < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n    }\n    return deltaY < 0 ? DIRECTION_UP : DIRECTION_DOWN;\n}\nexport function getDirectionEventName(direction) {\n    var name = void 0;\n    switch (direction) {\n        case DIRECTION_NONE:\n            break;\n        case DIRECTION_LEFT:\n            name = 'left';\n            break;\n        case DIRECTION_RIGHT:\n            name = 'right';\n            break;\n        case DIRECTION_UP:\n            name = 'up';\n            break;\n        case DIRECTION_DOWN:\n            name = 'down';\n            break;\n        default:\n    }\n    return name;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}